{"version":3,"sources":["common/components/Snackbar/Snackbar.tsx","common/components/Button/Button.tsx","common/components/Title/Title.tsx","utils/phone-mask.ts","components/feedback-form/FeedbackForm.tsx","App.tsx","index.tsx","common/components/Button/Button.module.scss","common/components/Title/Title.module.scss","components/feedback-form/FeedbackForm.module.scss"],"names":["Alert","React","forwardRef","props","ref","elevation","variant","SendMesSnackbar","status","setStatus","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","color","sx","width","Button","title","disabled","className","classes","centeredButton","btn","btn_disabled","type","Title","PATTERN","handlePhoneInput","phone","inputNumbersValue","replace","formattedInputValue","indexOf","length","substring","FeedbackForm","useState","btnDisable","setBtnDisable","formik","useFormik","initialValues","sender","email","birthday","textMessage","validate","values","errors","test","onSubmit","console","log","JSON","stringify","axios","post","then","res","data","resetForm","id","contactsBlock","container","inputField","col_8","handleSubmit","form","noValidate","formRow","col_6","formGroup","name","placeholder","onChange","handleChange","value","toUpperCase","formInput","touched","errorMessage","style","top","col_12","maxLength","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1c3c31b5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n  props,\r\n  ref\r\n) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\ntype SnackbarPropsType = {\r\n  status: null | string;\r\n  setStatus: (status: null | string) => void;\r\n};\r\n\r\nexport const SendMesSnackbar: React.FC<SnackbarPropsType> = ({\r\n  status,\r\n  setStatus,\r\n}) => {\r\n  const handleClose = (\r\n    event?: Event | React.SyntheticEvent,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setStatus(null);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={status !== null}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={status === \"Email send successfully\" ? \"success\" : \"error\"}\r\n        color={status === \"Email send successfully\" ? \"success\" : \"error\"}\r\n        sx={{ width: \"100%\" }}\r\n      >\r\n        {status}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.scss\";\r\n\r\ntype ButtonPropsType = {\r\n  title?: string;\r\n  disabled: boolean;\r\n};\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({ title, disabled }) => {\r\n  return (\r\n    <div className={classes.centeredButton}>\r\n      <button\r\n        className={\r\n          disabled ? `${classes.btn} ${classes.btn_disabled} ` : classes.btn\r\n        }\r\n        type={\"submit\"}\r\n      >\r\n        message me\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Title.module.scss\";\r\n\r\ntype TitlePropsType = {\r\n  title: string;\r\n};\r\n\r\nexport const Title: React.FC<TitlePropsType> = ({ title }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>{title}</h2>\r\n    </div>\r\n  );\r\n};\r\n","const PATTERN = /\\D/g;\r\n\r\nconst getInputNumbersValue = (value: string) => {\r\n  // return only numbers\r\n  return value.replace(PATTERN, \"\");\r\n};\r\n\r\nexport const handlePhoneInput = (phone: string) => {\r\n  let inputNumbersValue = getInputNumbersValue(phone);\r\n  let formattedInputValue = \"\";\r\n\r\n  if ([\"7\", \"8\", \"9\"].indexOf(inputNumbersValue[0]) > -1) {\r\n    // Russian phone number\r\n    if (inputNumbersValue[0] === \"9\") {\r\n      formattedInputValue = \"+7\" + inputNumbersValue;\r\n    }\r\n\r\n    const firstSymbols = inputNumbersValue[0] === \"8\" ? \"8\" : \"+7\";\r\n    formattedInputValue = firstSymbols + \" \";\r\n\r\n    if (inputNumbersValue.length > 1) {\r\n      formattedInputValue += \"(\" + inputNumbersValue.substring(1, 4);\r\n    }\r\n    if (inputNumbersValue.length >= 5) {\r\n      formattedInputValue += \") \" + inputNumbersValue.substring(4, 7);\r\n    }\r\n    if (inputNumbersValue.length >= 8) {\r\n      formattedInputValue += \"-\" + inputNumbersValue.substring(7, 9);\r\n    }\r\n    if (inputNumbersValue.length >= 10) {\r\n      formattedInputValue += \"-\" + inputNumbersValue.substring(9, 11);\r\n    }\r\n  } else if (inputNumbersValue[0]) {\r\n    // Not Russian phone number\r\n    formattedInputValue = \"+\" + inputNumbersValue.substring(0, 16);\r\n  }\r\n\r\n  return formattedInputValue;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { Button } from \"../../common/components/Button/Button\";\r\nimport { Title } from \"../../common/components/Title/Title\";\r\nimport classes from \"./FeedbackForm.module.scss\";\r\nimport axios from \"axios\";\r\nimport { handlePhoneInput } from \"../../utils/phone-mask\";\r\n\r\ntype FeedbackFormPropsType = {\r\n  setStatus: (status: null | string) => void;\r\n};\r\n\r\nexport const FeedbackForm: React.FC<FeedbackFormPropsType> = ({\r\n  setStatus,\r\n}) => {\r\n  const [btnDisable, setBtnDisable] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      sender: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      birthday: \"\",\r\n      textMessage: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors: FormikErrorType = {};\r\n\r\n      if (!values.sender) {\r\n        errors.sender = \"Required\";\r\n      } else if (\r\n        !/^([a-zA-Z]+){3,30}\\s([a-zA-Z]+){3,30}$/gm.test(values.sender)\r\n      ) {\r\n        errors.sender = \"Invalid name\";\r\n      }\r\n\r\n      if (!values.phone) {\r\n        errors.phone = \"Required\";\r\n      }\r\n\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n\r\n      if (!values.birthday) {\r\n        errors.birthday = \"Required\";\r\n      }\r\n\r\n      if (!values.textMessage) {\r\n        errors.textMessage = \"Required\";\r\n      } else if (values.textMessage.length < 10) {\r\n        errors.textMessage = \"The message length is less than 10 characters\";\r\n      } else if (values.textMessage.length > 300) {\r\n        errors.textMessage = \"Long message! Use less than 300 characters\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n      setBtnDisable(true);\r\n      axios\r\n        .post(\"https://gmail-smtp-nodejs.herokuapp.com/send-message\", values)\r\n        .then((res) => {\r\n          setStatus(res.data);\r\n          setBtnDisable(false);\r\n        });\r\n\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section id=\"contacts\" className={classes.contactsBlock}>\r\n      <div className={classes.container}>\r\n        <Title title=\"get in touch\" />\r\n        <div className={classes.inputField}>\r\n          <div className={classes.col_8}>\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n              className={classes.form}\r\n              noValidate\r\n            >\r\n              <div className={classes.formRow}>\r\n                <div className={classes.col_6}>\r\n                  <div className={classes.formGroup}>\r\n                    <input\r\n                      id=\"sender\"\r\n                      type=\"text\"\r\n                      name=\"sender\"\r\n                      placeholder=\"First name / Last name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.sender.toUpperCase()}\r\n                      className={classes.formInput}\r\n                    />\r\n                    {formik.touched.sender && formik.errors.sender ? (\r\n                      <div className={classes.errorMessage}>\r\n                        {formik.errors.sender}\r\n                      </div>\r\n                    ) : null}\r\n                    <input\r\n                      id=\"phone\"\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      placeholder=\"+7(999)999-99-99\"\r\n                      onChange={formik.handleChange}\r\n                      value={handlePhoneInput(formik.values.phone)}\r\n                      className={classes.formInput}\r\n                    />\r\n                    {formik.touched.phone && formik.errors.phone ? (\r\n                      <div\r\n                        style={{ top: \"145px\" }}\r\n                        className={classes.errorMessage}\r\n                      >\r\n                        {formik.errors.phone}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className={classes.col_6}>\r\n                  <div className={classes.formGroup}>\r\n                    <input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.email}\r\n                      className={classes.formInput}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ? (\r\n                      <div className={classes.errorMessage}>\r\n                        {formik.errors.email}\r\n                      </div>\r\n                    ) : null}\r\n\r\n                    <input\r\n                      id=\"birthday\"\r\n                      type=\"date\"\r\n                      name=\"birthday\"\r\n                      placeholder=\"Birthday\"\r\n                      className={classes.formInput}\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.birthday}\r\n                    />\r\n                    {formik.touched.birthday && formik.errors.birthday ? (\r\n                      <div\r\n                        style={{ top: \"145px\" }}\r\n                        className={classes.errorMessage}\r\n                      >\r\n                        {formik.errors.birthday}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className={classes.col_12}>\r\n                  <div className={classes.formGroup}>\r\n                    <textarea\r\n                      id=\"textMessage\"\r\n                      name=\"textMessage\"\r\n                      placeholder=\"Your message\"\r\n                      className={classes.formInput}\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.textMessage}\r\n                      maxLength={301}\r\n                    />\r\n                    {formik.touched.textMessage && formik.errors.textMessage ? (\r\n                      <div className={classes.errorMessage}>\r\n                        {formik.errors.textMessage}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className={classes.col_12}>\r\n                  <Button disabled={btnDisable} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// ==== TYPES ====\r\n\r\ntype FormikErrorType = {\r\n  sender?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  birthday?: string;\r\n  textMessage?: string;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { SendMesSnackbar } from \"./common/components/Snackbar/Snackbar\";\r\nimport { FeedbackForm } from \"./components/feedback-form/FeedbackForm\";\r\n\r\nexport const App: React.FC = () => {\r\n  const [status, setStatus] = useState<null | string>(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SendMesSnackbar status={status} setStatus={setStatus} />\r\n      <FeedbackForm setStatus={setStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centeredButton\":\"Button_centeredButton__360ia\",\"btn\":\"Button_btn__3Pqr-\",\"btn_disabled\":\"Button_btn_disabled__bCZc6\",\"btnDisabled\":\"Button_btnDisabled__2NU51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__26nXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"FeedbackForm_contactsBlock__2tl6I\",\"container\":\"FeedbackForm_container__6JxnE\",\"inputField\":\"FeedbackForm_inputField__2Mk2w\",\"col_8\":\"FeedbackForm_col_8__cHGES\",\"form\":\"FeedbackForm_form__1S4j_\",\"formRow\":\"FeedbackForm_formRow__3nQmE\",\"col_6\":\"FeedbackForm_col_6__LV_ov\",\"formGroup\":\"FeedbackForm_formGroup__6Wy_T\",\"formInput\":\"FeedbackForm_formInput__42uNT\",\"errorMessage\":\"FeedbackForm_errorMessage__onhlS\",\"col_12\":\"FeedbackForm_col_12__2c02W\"};"],"sourceRoot":""}